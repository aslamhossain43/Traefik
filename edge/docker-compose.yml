version: "3"
services:

  traefik:
    image: traefik:v2.0
    ports:
      - 80:80
      - 8080:8080
    command: 
      --api.insecure=true
      --api.dashboard=true
      --api.debug=true
      --log.level=DEBUG
      --providers.docker=true
      --providers.docker.exposedbydefault=false
      - --providers.file.filename=dynamic_config.yml
      --entrypoints.web.address=:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- ./dynamic_config.yml:/dynamic_config.yml
    labels:
      - traefik.enable=true
      #- traefik.http.routers.api.rule=Host(`www.mytraefik.com`)

  service-1:
    build:
      context: .././Service-1
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    labels:
      - traefik.enable=true
      - traefik.http.routers.s1-router.rule=Host(`s1.www.mytraefik.com`)
      - traefik.http.middlewares.s1-middleware.addprefix.prefix=/api/s1
      - traefik.http.routers.s1-router.middlewares=s1-middleware@docker
      - traefik.http.services.s1-service.loadbalancer.server.port=8081

  service-2:
    build:
      context: .././Service-2
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    labels:
      - traefik.enable=true
      - traefik.http.routers.s2-router.rule=Host(`s2.www.mytraefik.com`)
      - traefik.http.middlewares.s2-middleware.addprefix.prefix=/api/s2
      - traefik.http.routers.s2-router.middlewares=s2-middleware@docker
      - traefik.http.services.s2-service.loadbalancer.server.port=8082

  service-3:
    build:
      context: .././Service-3
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    labels:
      - traefik.enable=true
      - traefik.http.routers.s3-router.rule=Host(`s3.www.mytraefik.com`)
      - traefik.http.middlewares.s3-middleware.addprefix.prefix=/api/s3
      - traefik.http.routers.s3-router.middlewares=s3-middleware@docker
      - traefik.http.services.s3-service.loadbalancer.server.port=8083
